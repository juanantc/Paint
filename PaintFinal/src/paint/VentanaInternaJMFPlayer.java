
package paint;

import java.awt.Component;
import java.awt.Dimension;
import java.io.File;
import javax.media.Manager;
import javax.media.MediaLocator;
import javax.media.Player;

public class VentanaInternaJMFPlayer extends javax.swing.JInternalFrame {

    private Player p;
    
    private VentanaInternaJMFPlayer(File f) {        
        initComponents();
             
        String ex = getExtension(f);
        
        if(ex.equals("avi"))
            this.setPreferredSize(new Dimension(300,300));
        else
            this.setPreferredSize(new Dimension(200,50));
            
        try {
            MediaLocator ml = new MediaLocator("file:" + f.getAbsolutePath());
            p = Manager.createRealizedPlayer(ml);
            Component areaVisual = p.getVisualComponent();
            if(areaVisual!=null) this.add(areaVisual,java.awt.BorderLayout.CENTER);
            Component panelControl = p.getControlPanelComponent();
            if(panelControl!=null) this.add(panelControl,java.awt.BorderLayout.SOUTH);
            this.pack();           
        } catch(Exception e) {
            System.err.println("VentanaInternaJMFPlayer: " + e);
        }
    }
    
    public static VentanaInternaJMFPlayer getInstance(File f){
        VentanaInternaJMFPlayer vi = new VentanaInternaJMFPlayer(f);
        if(vi.p!=null)
            return vi;
        else
            return null;
    }
      
    public void play(){
        try{
            if(p!=null) p.start();
        } catch(Exception e) {
            System.err.println("VentanaInternaJMFPlayer: " + e);
        }
    }
    
    public void close(){
         try{
            if(p!=null) p.close();
        } catch(Exception e) {
            System.err.println("VentanaInternaJMFPlayer: " + e);
        }
    }
    
    public Player getPlayer(){
        return p;
    }
    
    public String getExtension(File f){
        String extension = null;
        int i = f.toString().lastIndexOf('.');
        if (i > 0) 
            extension = f.toString().substring(i+1); 
  
        return extension;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setClosable(true);
        setMaximizable(true);
        setResizable(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        this.close();
    }//GEN-LAST:event_formInternalFrameClosing


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
